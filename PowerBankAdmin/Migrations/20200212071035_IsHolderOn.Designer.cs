// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerBankAdmin.Data.Repository;

namespace PowerBankAdmin.Migrations
{
    [DbContext(typeof(AppRepository))]
    [Migration("20200212071035_IsHolderOn")]
    partial class IsHolderOn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PowerBankAdmin.AuthorizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Authorizations");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CardBindingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BindingId");

                    b.Property<int?>("CostumerModelId");

                    b.Property<string>("ExpiryDate");

                    b.Property<string>("FirstDigits");

                    b.Property<bool>("IsLocked");

                    b.Property<string>("LastDigits");

                    b.HasKey("Id");

                    b.HasIndex("CostumerModelId");

                    b.ToTable("CardBidnings");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerAuthorizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<int>("AuthType");

                    b.Property<int?>("CostumerId");

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("CostumerAuthorizations");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BindId");

                    b.Property<string>("Card");

                    b.Property<int>("CardsStatus");

                    b.Property<int>("CostumerStatus");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("OrderId");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.HolderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Comment");

                    b.Property<bool>("IsOn");

                    b.Property<string>("LocalCode");

                    b.Property<string>("OwnerAddress");

                    b.Property<string>("OwnerLatitude");

                    b.Property<string>("OwnerLongitude");

                    b.Property<string>("OwnerName");

                    b.Property<string>("Schedule");

                    b.HasKey("Id");

                    b.ToTable("Holders");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.HolderRentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HolderModelId");

                    b.Property<int?>("RentModelId");

                    b.HasKey("Id");

                    b.HasIndex("HolderModelId");

                    b.HasIndex("RentModelId");

                    b.ToTable("HolderRents");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.PowerbankModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("Electricity");

                    b.Property<int?>("HolderId");

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.HasIndex("HolderId");

                    b.ToTable("Powerbanks");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.PowerbankSessionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardId");

                    b.Property<int?>("CostumerId");

                    b.Property<DateTime>("Finish");

                    b.Property<int?>("PowerbankId");

                    b.Property<int?>("RentModelId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.HasIndex("PowerbankId");

                    b.HasIndex("RentModelId");

                    b.ToTable("PowerbankSessions");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.RentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RentStrategy");

                    b.HasKey("Id");

                    b.ToTable("RentModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RentStrategy = 0
                        },
                        new
                        {
                            Id = 2,
                            RentStrategy = 1
                        },
                        new
                        {
                            Id = 3,
                            RentStrategy = 2
                        });
                });

            modelBuilder.Entity("PowerBankAdmin.Models.TransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int?>("CostumerModelId");

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.HasIndex("CostumerModelId");

                    b.ToTable("TransactionModel");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("PowerBankAdmin.Models.VerificationCodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int?>("CostumerId");

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("VerificationCodes");
                });

            modelBuilder.Entity("PowerBankAdmin.AuthorizationModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.UserModel", "User")
                        .WithMany("Authorizations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CardBindingModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel")
                        .WithMany("CardBindings")
                        .HasForeignKey("CostumerModelId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerAuthorizationModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel", "Costumer")
                        .WithMany("Authorizations")
                        .HasForeignKey("CostumerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerBankAdmin.Models.HolderRentModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.HolderModel", "HolderModel")
                        .WithMany("HolderRentModels")
                        .HasForeignKey("HolderModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerBankAdmin.Models.RentModel", "RentModel")
                        .WithMany("HolderRentModels")
                        .HasForeignKey("RentModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerBankAdmin.Models.PowerbankModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.HolderModel", "Holder")
                        .WithMany("Powerbanks")
                        .HasForeignKey("HolderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerBankAdmin.Models.PowerbankSessionModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel", "Costumer")
                        .WithMany("Sessions")
                        .HasForeignKey("CostumerId");

                    b.HasOne("PowerBankAdmin.Models.PowerbankModel", "Powerbank")
                        .WithMany("Sessions")
                        .HasForeignKey("PowerbankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerBankAdmin.Models.RentModel", "RentModel")
                        .WithMany()
                        .HasForeignKey("RentModelId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.TransactionModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel")
                        .WithMany("Transaction")
                        .HasForeignKey("CostumerModelId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.VerificationCodeModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel", "Costumer")
                        .WithMany("Verifications")
                        .HasForeignKey("CostumerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
