// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerBankAdmin.Data.Repository;

namespace PowerBankAdmin.Migrations
{
    [DbContext(typeof(AppRepository))]
    [Migration("20190818161259_Costumers1")]
    partial class Costumers1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PowerBankAdmin.AuthorizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Authorizations");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerAuthorizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<int>("AuthType");

                    b.Property<int?>("CostumerId");

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("CostumerAuthorizations");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostumerStatus");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("PowerBankAdmin.Models.VerificationCodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int?>("CostumerId");

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("VerificationCodes");
                });

            modelBuilder.Entity("PowerBankAdmin.AuthorizationModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.UserModel", "User")
                        .WithMany("Authorizations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.CostumerAuthorizationModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel", "Costumer")
                        .WithMany("Authorizations")
                        .HasForeignKey("CostumerId");
                });

            modelBuilder.Entity("PowerBankAdmin.Models.VerificationCodeModel", b =>
                {
                    b.HasOne("PowerBankAdmin.Models.CostumerModel", "Costumer")
                        .WithMany("Verifications")
                        .HasForeignKey("CostumerId");
                });
#pragma warning restore 612, 618
        }
    }
}
