@page "{holderId:int?}"
@model Pages.Take.SelectTariffModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row m-b-lg">
    <img src="~/css/patterns/logo.png" class="img-responsive" style="width: 167px; height: 78px; margin: auto" />
</div>


<div style="position: absolute; z-index: -10; width: 100%; bottom:0; left: 0; right: 0">
    <img src="~/css/patterns/wave.png" style="width: 100%" />
    <!--<img src="~/css/patterns/powerbank_holder.gif" class="img-responsive" style="position:absolute; bottom: 0" />-->
</div>



<div id="tariff-selector-block" class="col-md-12 m-t-lg p-t-md" style="background-color: #242a2f87; border-radius: 8px 8px; padding-top:30px; padding-bottom:30px">

    <div class="container">
        <div class="col-xs-2">
            <img src="~/css/patterns/pin.png" style="width: 18px; height: 26px;" />
        </div>
        <div class="col-xs-10">
            <p class="pb-text-13">Ул. Маросейка, 4/2с1 Кофемания</p>
        </div>
    </div>
    <div class="container m-t-lg">
        <div class="col-xs-12">
            <p class="pb-text-17-normal">Выберите тариф</p>
        </div>
    </div>
    <form method="post" id="select-tariff-form">
        <input type="hidden" name="holderId" value="@Model.HolderId" />
        <div class="container">
            @if (Model.Holder.HolderRentModels?.Any(x => x.RentModel.RentStrategy == Models.RentStrategy.Hour) ?? false)
            {
                <div class="col-xs-6 radiobutton">
                    <input type="radio" name="tariff" checked="checked" value="hour" />
                    <label class="btn btn-primary-orange btn-block pb-button-shadow pb-text-13-bold" style="padding-top: 4px">49 ₽<br />за час</label>
                </div>
            }
            @if (Model.Holder.HolderRentModels?.Any(x => x.RentModel.RentStrategy == Models.RentStrategy.Day) ?? false)
            {
                <div class="col-xs-6 radiobutton">
                    <input type="radio" name="tariff" value="day" />
                    <label class="btn btn-primary-orange btn-block pb-button-shadow pb-text-13-bold" style="padding-top: 4px">99 ₽<br />за сутки</label>
                </div>
            }
            @if (Model.Holder.HolderRentModels?.Any(x => x.RentModel.FirstHourFree) ?? false)
            { 
                <div class="col-xs-6">
                    <p>Первый час бесплатно</p>
                </div>
            }
            <div class="container m-t-lg">
                <div class="col-xs-12">
                    <p class="pb-text-17-normal">Выбор способа оплатой</p>
                </div>
            </div>
            <div class="container">
                @if (Model.Costumer.CardBindings != null)
                {
                    foreach (var cardBinding in Model.Costumer.CardBindings)
                    {
                        <div class="col-xs-12 radiobutton m-b-sm">
                            @if (Model.Costumer.CardBindings.First() == cardBinding)
                            {
                                <input type="radio" name="card" checked="checked" value="@cardBinding.BindingId" />
                            }
                            else
                            {
                                <input type="radio" name="card" value="@cardBinding.BindingId" />
                            }
                            <label class="btn btn-primary-orange btn-block pb-button-shadow" style="height: 49px; padding-top: 10px">@cardBinding.MaskedPan</label>
                        </div>
                    }
                    <div class="col-md-12 m-b-md">
                        <button type="submit" class="btn btn-primary-orange btn-block pb-button-shadow"
                                style="height: 49px; padding-top: 10px">
                            выбрать
                        </button>
                    </div>
                }
            </div>
</form>

    <div class="container">
        <form method="post">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary-orange btn-block pb-button-shadow" asp-page-handler="AddCard"
                        style="height: 49px; padding-top: 10px">
                    добавить карту
                </button>
            </div>
        </form>
    </div>
</div>

<div id="session-timer-block">
    <div class="row text-center m-t-lg" id="timer-equipment-block">
        <div>
            <input id="session-duration" type="hidden" value="@ViewData["SessionDuration"]" />
            <pre id="timer-text" class="p-power-now-normal"></pre>
        </div>
    </div>
    <div class="row m-t-lg">
    </div>
    <div class="row">
        <div class="col-xs-10 pb-no-left-padding">
            <span class="p-power-now-normal">Зарегистрируйся на сайте и получи </span>
            <span class="p-power-now-normal" style="font-weight: bold;">49 баллов</span>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        var timerBlock = $("#session-timer-block");
        var tariffBlock = $("#tariff-selector-block");
        var elapsed_seconds = parseInt($("#session-duration").val());
        if (elapsed_seconds > 0) {
            timerBlock.show();
            tariffBlock.hide();
            startTimer();
        }
        else {
            timerBlock.hide();
        }


        function startTimer() {
            var timerText = $("#timer-text");

            var elapsed_seconds = parseInt($("#session-duration").val());
            setInterval(function () {
                elapsed_seconds = elapsed_seconds + 1;
                timerText.text(get_elapsed_time_string(elapsed_seconds));
            }, 1000);

            setInterval(check, 5000);
        }



        function check() {
            var token = $('input[name="__RequestVerificationToken"]').val()
            var request = $.ajax({
                url: "/take?handler=check",
                type: "POST",
                dataType: "json",
                data: {
                    __RequestVerificationToken: token
                },
                success: function (response) {
                    switch (response.code) {
                        case 200:
                            switch (response.message) {
                                case "1":
                                    break;
                                case "0":
                                    alert("Session is over");
                                    location.reload();
                                    break;
                                default:
                                    alert(response.message);
                                    break;
                            }
                            break;
                        default:
                            alert(response.message);
                            break;
                    }
                }
            });
        }


        function get_elapsed_time_string(total_seconds) {
            function pretty_time_string(num) {
                return (num < 10 ? "0\u00A0\u00A0" : "") + num.toString().split('').join('\u00A0\u00A0');
            }

            var hours = Math.floor(total_seconds / 3600);
            total_seconds = total_seconds % 3600;

            var minutes = Math.floor(total_seconds / 60);
            total_seconds = total_seconds % 60;

            var seconds = Math.floor(total_seconds);

            // Pad the minutes and seconds with leading zeros, if required
            hours = pretty_time_string(hours);
            minutes = pretty_time_string(minutes);
            seconds = pretty_time_string(seconds);

            // Compose the string for display
            var currentTimeString = hours + "\u00A0  :  \u00A0" + minutes + "\u00A0  :  \u00A0" + seconds;

            return currentTimeString;
        }
    });

    
</script>
